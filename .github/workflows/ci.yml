name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        go-version: [ '1.18', '1.19', '1.20', '1.21' ]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
    
    - name: Verify dependencies
      run: go mod verify
    
    - name: Build
      run: go build -v ./...
    
    - name: Run tests
      run: go test -v ./...
    
    - name: Run go vet
      run: go vet ./...
    
    - name: Install staticcheck
      run: go install honnef.co/go/tools/cmd/staticcheck@latest
    
    - name: Run staticcheck
      run: staticcheck ./...

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Build for multiple platforms
      run: |
        # Build for Linux amd64
        GOOS=linux GOARCH=amd64 go build -o vs-linux-amd64 vs.go
        
        # Build for Linux arm64
        GOOS=linux GOARCH=arm64 go build -o vs-linux-arm64 vs.go
        
        # Build for Windows amd64
        GOOS=windows GOARCH=amd64 go build -o vs-windows-amd64.exe vs.go
        
        # Build for macOS amd64
        GOOS=darwin GOARCH=amd64 go build -o vs-darwin-amd64 vs.go
        
        # Build for macOS arm64
        GOOS=darwin GOARCH=arm64 go build -o vs-darwin-arm64 vs.go
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: vs-binaries
        path: |
          vs-linux-amd64
          vs-linux-arm64
          vs-windows-amd64.exe
          vs-darwin-amd64
          vs-darwin-arm64
