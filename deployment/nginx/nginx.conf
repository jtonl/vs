# Video Server (vs) Nginx Configuration

# Rate limiting for vs
limit_req_zone $binary_remote_addr zone=vs_api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=vs_video:10m rate=5r/s;

# Upstream backend
upstream vs_backend {
    server video-server:32767;
    keepalive 32;
}

server {
    listen 80;
    server_name localhost;

    # Security headers for video streaming
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Content-Security-Policy "default-src 'self'; media-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';" always;

    # Logging
    access_log /var/log/nginx/vs_access.log;
    error_log /var/log/nginx/vs_error.log warn;

    # Main proxy for file browser and API
    location / {
        limit_req zone=vs_api burst=20 nodelay;
        
        proxy_pass http://vs_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Optimized for video streaming
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_connect_timeout 30s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }

    # Video file streaming with tighter rate limits
    location ~* \.(mkv|mp4|avi|mov|wmv|flv|webm)$ {
        limit_req zone=vs_video burst=10 nodelay;
        
        proxy_pass http://vs_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Essential for range requests (seeking)
        proxy_set_header Range $http_range;
        proxy_set_header If-Range $http_if_range;
        
        # Disable buffering for large files
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_max_temp_file_size 0;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "vs healthy\n";
        add_header Content-Type text/plain;
    }
}